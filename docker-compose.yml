version: "3.8"

services:
  test:
    build: .
    depends_on:
      mongodb:
        condition: service_healthy
      nats:
        condition: service_started
      redis:
        condition: service_healthy
      kafka:
        condition: service_started
      schema-registry:
        condition: service_started

    container_name: "telegram-bot"
    ports:
      - "8080:8080"

  mongodb:
    image: mongo:6.0
    container_name: "mongodb"
    ports:
      - "27017:27017"
    volumes:
      - ./mongodb_data:/data/db
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 10s
      timeout: 10s
      retries: 10

  nats:
    image: nats
    container_name: "nats"
    ports:
      - "4222:4222"

  redis:
    image: redis
    container_name: "redis"
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]

  kafka:
    image: confluentinc/cp-kafka:7.5.1
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENERS: INTERNAL://kafka:29092, EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092, EXTERNAL://localhost:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT, EXTERNAL:PLAINTEXT
    depends_on:
      - zookeeper

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  schema-registry:
    image: confluentinc/cp-schema-registry:7.5.1
    ports:
      - "8081:8081"
    depends_on:
      - kafka
      - zookeeper
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:29092

volumes:
  mongo-data:
